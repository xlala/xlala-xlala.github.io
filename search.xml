<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[larvel环境安装结构]]></title>
    <url>%2F2019%2F06%2F12%2Flarvel%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[Laravel 笔记1 环境安装1.1 PHP1.1.1 安装PHP7.2123sudo apt-get install software-properties-common python-software-properties sudo add-apt-repository ppa:ondrej/php &amp;&amp; sudo apt-get updatesudo apt-get -y install php7.2 1.1.2 如果之前有其他版本PHP，在这边禁用掉12sudo a2dismod php5sudo a2enmod php7.2 1.1.3 安装常用扩展1sudo apt-get install php7.2-fpm php7.2-mysql php7.2-curl php7.2-json php7.2-mbstring php7.2-xml php7.2-intl 1.1.4 安装其他扩展（按需安装）12345678910111213141516171819202122232425sudo apt-get install php7.2-gdsudo apt-get install php7.2-soapsudo apt-get install php7.2-gmpsudo apt-get install php7.2-odbc sudo apt-get install php7.2-pspell sudo apt-get install php7.2-bcmath sudo apt-get install php7.2-enchant sudo apt-get install php7.2-imap sudo apt-get install php7.2-ldap sudo apt-get install php7.2-opcachesudo apt-get install php7.2-readline sudo apt-get install php7.2-sqlite3 sudo apt-get install php7.2-xmlrpcsudo apt-get install php7.2-bz2sudo apt-get install php7.2-interbasesudo apt-get install php7.2-pgsql sudo apt-get install php7.2-recode sudo apt-get install php7.2-sybase sudo apt-get install php7.2-xslsudo apt-get install php7.2-cgi sudo apt-get install php7.2-dba sudo apt-get install php7.2-phpdbg sudo apt-get install php7.2-snmp sudo apt-get install php7.2-tidy sudo apt-get install php7.2-zip 1.2. Composer安装1apt-get install composer 1.3. Laravel安装1composer global require "laravel/installer" 1.4 laradock安装 克隆laradock项目 1git clone https://github.com/Laradock/laradock.git env-exampleto.env 配置应用目录 ../ PHP版本 启动 1docker-compose up -d nginx mysql phpmyadmin redis workspace 2. Laravel项目Laravel项目MVC架构 创建项目两种途径，laravel和composer. laravel new blog composer create-project –prefer-dist laravel/laravel blog “5.5.*” 项目目录主要结构： 12345678910111213141516171819202122232425262728blog |_app |_Http |_Controllers |_Models |_Notifications |_Policies |_Providers |_config |_database |_factories |_migrations |_seeds |_laradock |_public |_css |_js |_svg |_resouces |_js |_lang |_sass |_views |_routes |_vendor .env composer.json package.json Laravel 文件夹结构简介: 文件夹名称 简介 app 应用程序的业务逻辑代码存放文件夹 app/Console 存放自定义 Artisan 命令文件 app/Http/Controllers 存放控制器文件 app/Http/Middleware 存放「中间件」文件 bootstrap 框架启动与自动加载设置相关的文件 composer.json 应用依赖的扩展包 composer.lock 扩展包列表，确保这个应用的副本使用相同版本的扩展包 config 应用程序的配置文件 database 数据库操作相关文件（数据库迁移和数据填充） node_modules 存放 NPM 依赖模块 package.json 应用所需的 NPM 包配置文件 phpunit.xml 测试工具 PHPUnit 的配置文件 public 前端控制器和资源相关文件（图片、JavaScript、CSS） readme.md 项目介绍说明文件 resources 应用资源 resources/assets 未编译的应用资源文件（图片、JavaScript、CSS） resources/lang 多语言文件 resources/views 视图文件 routes/api.php 用于定义 API 类型的路由 routes/channels.php 事件转播注册信息 routes/console.php 用于定义 Artisan 命令 routes/web.php 用于定义 Web 类型的路由（重点，大部分情况下本书会用到） server.php 使用 PHP 内置服务器时的 URL 重写（类似于 Apache 的 “mod_rewrite” ） storage 编译后的视图、基于会话、文件缓存和其它框架生成的文件 storage/app 目录可用于存储应用程序使用的任何文件 storage/framework 目录被用于保存框架生成的文件及缓存 storage/logs 应用程序的日志文件 tests 应用测试相关文件 vendor Composer 依赖模块 webpack.mix.js Laravel 的前端工作流配置文件 yarn.lock Yarn 依赖版本锁定文件 .gitignore 被 Git 所忽略的文件 .env 环境变量配置文件 2.1 配置项目将laradock项目克隆到laravel项目下，启动LAMP环境，登录到workspace容器，执行PHP命令。 重命名项目.env.example -&gt; .env 配置.env 123DB_HOST=192.168.1.82REDIS_HOST=192.168.1.82QUEUE_HOST=192.168.1.82 php artisan key:generate chmod -R 777 blog 在workspace环境中，运行artisan创建代码后，需要到外面重新做chmod mysql认证问题 The server requested authentication method unknown to the client 修改my.cnf 12[mysqld]default_authentication_plugin=mysql_native_password]]></content>
      <categories>
        <category>Laravel</category>
      </categories>
      <tags>
        <tag>Laravel</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo]]></title>
    <url>%2F2019%2F06%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
